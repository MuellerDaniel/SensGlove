from __future__ import division
import numpy as np
import modelDip as modD


def jacoCalcB(rx,ry,rz):
    ''' First derivative of dipole model for H = [1,0,0]
        imported from Matlab... '''
    J = np.array([
        [(18303781807138305.*rx)/(2305843009213693952.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(5./2)) + (18303781807138305.*abs(rx)*np.sign(rx))/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(5./2)) - (91518909035691525.*rx**2*abs(rx)*np.sign(rx))/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(7./2)),
         (18303781807138305.*abs(ry)*np.sign(ry))/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(5./2)) - (91518909035691525.*rx**2*abs(ry)*np.sign(ry))/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(7./2)),
         (18303781807138305.*abs(rz)*np.sign(rz))/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(5./2)) - (91518909035691525.*rx**2*abs(rz)*np.sign(rz))/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(7./2))],

        [ (18303781807138305.*ry)/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(5./2)) - (91518909035691525.*rx*ry*abs(rx)*np.sign(rx))/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(7./2)),
         (18303781807138305.*rx)/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(5./2)) - (91518909035691525.*rx*ry*abs(ry)*np.sign(ry))/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(7./2)),
        -(91518909035691525.*rx*ry*abs(rz)*np.sign(rz))/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(7./2))],

        [(18303781807138305.*rz)/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(5./2)) - (91518909035691525.*rx*rz*abs(rx)*np.sign(rx))/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(7./2)),
         -(91518909035691525.*rx*rz*abs(ry)*np.sign(ry))/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(7./2)),
         (18303781807138305.*rx)/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(5./2)) - (91518909035691525.*rx*rz*abs(rz)*np.sign(rz))/(4611686018427387904.*(abs(rx)**2 + abs(ry)**2 + abs(rz)**2)**(7./2))]])

    return J


def jacoAngToB(mcp, dip):
    ''' First derivative of model equation for
        - ONE finger and ONE sensor (using the dipole model)
        - using fixed finger, joint and sensor position values, described in handDim.py
        - handDim.phalInd, handDim.jointInd_car, handDim.sInd_car '''

#    J = np.array([
#        [(6101260602379435*np.sin((5*dip)/3 + mcp))/(4611686018427387904*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(3/2)) - (18303781807138305*np.cos((5*dip)/3 + mcp)*(2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500) - 2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500)))/(9223372036854775808*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(5/2)) - (6101260602379435*(np.sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - np.cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*((7743*np.cos(dip - np.pi/2 + mcp))/100000 + (2517*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.cos(mcp - np.pi/2))/2500))/(4611686018427387904*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(5/2)) + (6101260602379435*(np.cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000) - np.cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) + np.sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000) - np.sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*((7743*np.sin(dip - np.pi/2 + mcp))/100000 + (2517*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.sin(mcp - np.pi/2))/2500 - 3/50))/(4611686018427387904*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(5/2)) - (30506303011897175*(np.sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - np.cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*(2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500) - 2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500))*((7743*np.sin(dip - np.pi/2 + mcp))/100000 + (2517*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.sin(mcp - np.pi/2))/2500 - 3/50))/(9223372036854775808*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(7/2)),
#        (30506303011897175*np.sin((5*dip)/3 + mcp))/(13835058055282163712*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(3/2)) - (6101260602379435*((7743*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/10000)*(np.sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - np.cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50)))/(4611686018427387904*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(5/2)) + (6101260602379435*((7743*np.sin(dip - np.pi/2 + mcp))/100000 + (2517*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.sin(mcp - np.pi/2))/2500 - 3/50)*(np.sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/30000) - (5*np.cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250))/3 - (5*np.sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))/3 + np.cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/30000)))/(4611686018427387904*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(5/2)) + (18303781807138305*np.cos((5*dip)/3 + mcp)*(2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/30000) - 2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/30000)))/(9223372036854775808*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(5/2)) + (30506303011897175*(2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/30000) - 2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/30000))*(np.sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - np.cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*((7743*np.sin(dip - np.pi/2 + mcp))/100000 + (2517*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.sin(mcp - np.pi/2))/2500 - 3/50))/(9223372036854775808*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(7/2))],
#        [0.,
#         0.],
#        [(6101260602379435*np.cos((5*dip)/3 + mcp))/(4611686018427387904*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(3/2)) + (18303781807138305*np.sin((5*dip)/3 + mcp)*(2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500) - 2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500)))/(9223372036854775808*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(5/2)) + (6101260602379435*(sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*((7743*np.sin(dip - np.pi/2 + mcp))/100000 + (2517*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.sin(mcp - np.pi/2))/2500))/(4611686018427387904*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(5/2)) + (6101260602379435*(cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000) - cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) + sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000) - sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*((7743*np.cos(dip - np.pi/2 + mcp))/100000 + (2517*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.cos(mcp - np.pi/2))/2500 + 3/250))/(4611686018427387904*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(5/2)) - (30506303011897175*(sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*(2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500) - 2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500))*((7743*np.cos(dip - np.pi/2 + mcp))/100000 + (2517*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.cos(mcp - np.pi/2))/2500 + 3/250))/(9223372036854775808*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(7/2)),
#         (30506303011897175*np.cos((5*dip)/3 + mcp))/(13835058055282163712*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(3/2)) + (6101260602379435*((7743*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/10000)*(sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50)))/(4611686018427387904*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(5/2)) + (6101260602379435*((7743*np.cos(dip - np.pi/2 + mcp))/100000 + (2517*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.cos(mcp - np.pi/2))/2500 + 3/250)*(sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/30000) - (5*np.cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250))/3 - (5*np.sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))/3 + cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/30000)))/(4611686018427387904*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(5/2)) - (18303781807138305*np.sin((5*dip)/3 + mcp)*(2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/30000) - 2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/30000)))/(9223372036854775808*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(5/2)) + (30506303011897175*(2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/30000) - 2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/30000))*(sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*((7743*np.cos(dip - np.pi/2 + mcp))/100000 + (2517*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.cos(mcp - np.pi/2))/2500 + 3/250))/(9223372036854775808*(abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)**2 + abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)**2)**(7/2))]])

    J = np.array([[(6101260602379435*np.sin((5*dip)/3 + mcp))/(4611686018427387904*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(3/2)) - (18303781807138305*np.cos((5*dip)/3 + mcp)*(2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500) - 2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500)))/(9223372036854775808*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(5/2)) - (6101260602379435*(np.sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - np.cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*((7743*np.cos(dip - np.pi/2 + mcp))/100000 + (2517*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.cos(mcp - np.pi/2))/2500))/(4611686018427387904*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(5/2)) + (6101260602379435*(np.cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000) - np.cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) + np.sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000) - np.sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*((7743*np.sin(dip - np.pi/2 + mcp))/100000 + (2517*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.sin(mcp - np.pi/2))/2500 - 3/50))/(4611686018427387904*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(5/2)) - (30506303011897175*(np.sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - np.cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*(2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500) - 2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500))*((7743*np.sin(dip - np.pi/2 + mcp))/100000 + (2517*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.sin(mcp - np.pi/2))/2500 - 3/50))/(9223372036854775808*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(7/2)),
          (30506303011897175*np.sin((5*dip)/3 + mcp))/(13835058055282163712*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(3/2)) - (6101260602379435*((7743*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/10000)*(np.sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - np.cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50)))/(4611686018427387904*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(5/2)) + (6101260602379435*((7743*np.sin(dip - np.pi/2 + mcp))/100000 + (2517*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.sin(mcp - np.pi/2))/2500 - 3/50)*(np.sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/30000) - (5*np.cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250))/3 - (5*np.sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))/3 + np.cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/30000)))/(4611686018427387904*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(5/2)) + (18303781807138305*np.cos((5*dip)/3 + mcp)*(2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/30000) - 2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/30000)))/(9223372036854775808*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(5/2)) + (30506303011897175*(2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/30000) - 2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/30000))*(np.sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - np.cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*((7743*np.sin(dip - np.pi/2 + mcp))/100000 + (2517*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.sin(mcp - np.pi/2))/2500 - 3/50))/(9223372036854775808*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(7/2))],
          [0,
          0],
          [(6101260602379435*np.cos((5*dip)/3 + mcp))/(4611686018427387904*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(3/2)) + (18303781807138305*np.sin((5*dip)/3 + mcp)*(2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500) - 2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500)))/(9223372036854775808*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(5/2)) + (6101260602379435*(np.sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - np.cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*((7743*np.sin(dip - np.pi/2 + mcp))/100000 + (2517*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.sin(mcp - np.pi/2))/2500))/(4611686018427387904*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(5/2)) + (6101260602379435*(np.cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000) - np.cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) + np.sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000) - np.sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*((7743*np.cos(dip - np.pi/2 + mcp))/100000 + (2517*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.cos(mcp - np.pi/2))/2500 + 3/250))/(4611686018427387904*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(5/2)) - (30506303011897175*(np.sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - np.cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*(2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500) - 2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500))*((7743*np.cos(dip - np.pi/2 + mcp))/100000 + (2517*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.cos(mcp - np.pi/2))/2500 + 3/250))/(9223372036854775808*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(7/2)),
          (30506303011897175*np.cos((5*dip)/3 + mcp))/(13835058055282163712*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(3/2)) + (6101260602379435*((7743*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/10000)*(np.sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - np.cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50)))/(4611686018427387904*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(5/2)) + (6101260602379435*((7743*np.cos(dip - np.pi/2 + mcp))/100000 + (2517*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.cos(mcp - np.pi/2))/2500 + 3/250)*(np.sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/30000) - (5*np.cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250))/3 - (5*np.sin((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))/3 + np.cos((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/30000)))/(4611686018427387904*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(5/2)) - (18303781807138305*np.sin((5*dip)/3 + mcp)*(2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/30000) - 2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/30000)))/(9223372036854775808*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(5/2)) + (30506303011897175*(2*abs((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*np.sign((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.sin(mcp - np.pi/2))/2500 - 1/50)*((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/30000) - 2*abs((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*np.sign((2581*np.cos(dip - np.pi/2 + mcp))/100000 + (839*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (77*np.cos(mcp - np.pi/2))/2500 + 1/250)*((2581*np.sin(dip - np.pi/2 + mcp))/100000 + (839*np.sin((5*dip)/3 - np.pi/2 + mcp))/30000))*(np.sin((5*dip)/3 + mcp)*((2581*np.cos(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.cos(np.conj(mcp) - np.pi/2))/2500 + (839*np.cos((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 + 1/250) - np.cos((5*dip)/3 + mcp)*((2581*np.sin(np.conj(dip) - np.pi/2 + np.conj(mcp)))/100000 + (77*np.sin(np.conj(mcp) - np.pi/2))/2500 + (839*np.sin((5*np.conj(dip))/3 - np.pi/2 + np.conj(mcp)))/50000 - 1/50))*((7743*np.cos(dip - np.pi/2 + mcp))/100000 + (2517*np.cos((5*dip)/3 - np.pi/2 + mcp))/50000 + (231*np.cos(mcp - np.pi/2))/2500 + 3/250))/(9223372036854775808*(abs((77*np.cos(mcp - np.pi/2))/2500 + (2581*np.cos(dip + mcp - np.pi/2))/100000 + (839*np.cos((5*dip)/3 + mcp - np.pi/2))/50000 + 1/250)**2 + abs((77*np.sin(mcp - np.pi/2))/2500 + (2581*np.sin(dip + mcp - np.pi/2))/100000 + (839*np.sin((5*dip)/3 + mcp - np.pi/2))/50000 - 1/50)**2)**(7/2))]])


    return J


def EKF_predict_dip(x, P_old, Q):

    x_pred = x
    P_pred = P_old + Q

    return (x_pred, P_pred)



def EKF_update_dip(jaco, meas, x_pred, P_pred, R):

    c = jaco(x_pred[0], x_pred[1], x_pred[2])

    g = np.dot(np.dot(P_pred, c.T), np.linalg.inv(np.dot(np.dot(c, P_pred), c.T) + R))

    x_now = x_pred + np.dot(g, (meas - modD.calcB(x_pred,np.array([1., 0., 0]))))
#    dif = meas - calcB_dip(x_pred(1:3)',[1 0 0])'

    P_now = np.dot((np.eye(3) - np.dot(g, c)), P_pred)

    return (x_now, P_now)
